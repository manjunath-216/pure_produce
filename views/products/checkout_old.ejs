<%- layout('./layouts/boilerplate') %>
<script>
  var razorpay = new Razorpay({
    key: 'rzp_test_BUP7HBUiCiHb4b',
  });
</script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<div class="container mb-3">
  <div class="row">
      <div class="col-md-8 offset-md-2 col-lg-8 offset-lg-2">
          <div class="card shadow px-3">
            <div class="card-body">
              <h5 class="card-title mb-3 text-center">Payment Details</h5>
              <input type="hidden" name="order_id" value="<%= order_id %>">
              <form id="parent-form">  
                  <div class="col-12">
                      <div class="d-flex flex-column">
                          <p class="text mb-1">Person Name</p> <input class="form-control mb-3" type="text" placeholder="John Doe" id="name">
                      </div>
                  </div>
                  <div class="col-12">
                      <div class="d-flex flex-column">
                          <p class="text mb-1">Card Number</p> <input class="form-control mb-3" id="card_number" type="text" placeholder="1234 1234 1234 1234" name="card_number">
                      </div>
                  </div>
                  <div class="col-12">
                      <div class="d-flex flex-column">
                          <p class="text mb-1">Expiry</p> <input class="form-control mb-3" id="card_expiry" type="text" placeholder="MM/YY" name="card_expiry">
                      </div>
                  </div>
                  <div class="col-12">
                      <div class="d-flex flex-column">
                          <p class="text mb-1">CVV/CVC</p> <input class="form-control mb-3 pt-2 " id="card_cvv" type="password" placeholder="***" name="card_cvv">
                      </div>
                  </div>
                  <div class="col-12">
                    <!-- <button class = "btn btn-primary mb-3"value="<%= amount/100 %>" name="amount" onclick="pay();">Standard</button> -->
                      <button id="rzp-button1" class = "btn btn-primary mb-3"value="<%= amount/100 %>" name="amount"">Standard</button>
                  </div>
                </form>
            </div>
          </div>
        </div>
      </div>
  </div>
    
    <!-- <script>
      // shortcut function for document.getElementById
    var getEl = document.getElementById.bind(document);
    var formatter = Razorpay.setFormatter(getEl("parent-form"));
    var cvvField = getEl('card_cvv');
    
    formatter.add('card', getEl('card_number'))
      .on('network', function(o) {
    
        var type = this.type; // e.g. 'visa'
    
        // set length of cvv element based on amex card
        var cvvlen = type === 'amex' ? 4 : 3;
        cvvField.maxLength = cvvlen;
        cvvField.pattern = '^[0-9]{' + cvvlen + '}$';
    
        getEl('card_type').innerHTML = type;
      })
      .on('change', function() {
        var isValid = this.isValid();
        getEl('card_valid').innerHTML = isValid ? 'valid' : 'invalid';
    
        // automatically focus next field if card number is valid and filled
        if (isValid && this.el.value.length === this.caretPosition) {
          getEl('card_expiry').focus();
        }
      })
    
    formatter.add('expiry', getEl('card_expiry'))
      .on('change', function() {
        var isValid = this.isValid();
        getEl('expiry_valid').innerHTML = isValid ? 'valid' : 'invalid';
    
        // automatically focus next field if card number is valid and filled
        if (isValid && this.el.value.length === this.caretPosition) {
          getEl('card_cvv').focus();
        }
      })
    
      // method specific fields
      
    
    
    function pay(){
    // has to be placed within user initiated context, such as click, in order for popup to open.
    var data = {
      amount: '<%= amount %>', // in currency subunits. Here 1000 = 1000 paise, which equals to â‚¹10
      currency: "INR",// Default is INR. We support more than 90 currencies.
      email: 'gaurav.kumar@example.com',
      contact: '9123456780',
      notes: {
        address: 'Ground Floor, SJR Cyber, Laskar Hosur Road, Bengaluru',
      },
      order_id: '<%= order_id %>',// Replace with Order ID generated in Step 4
      method: 'card',
      card:{
        number: $("#card_number").val(),
        name: $("#name").val(),
        expiry_month: parseInt($('#card_expiry').val().split('/')[0]),
        expiry_year: parseInt($('#card_expiry').val().split('/')[1]),
        cvv: parseInt($('#card_cvv').val())
      }
    };
    
    console.log(data, '/products/<%= product_id %>/orders/pay-verify', '<%= user._id %>');
    //razorpay.createPayment(data);
    razorpay.open();
    
    razorpay.on('payment.success', async (resp) => {
      // swal("Success!", "Your payment is sucess", "success");
      console.log(resp);
      //req.flash('success', 'successfully placed your order');
      await $.ajax({
        type: 'POST',
        url: '/products/<%= product_id %>/orders/pay-verify',
        data: {
          razorpay_payment_id: resp.razorpay_payment_id,
          razorpay_order_id: resp.razorpay_order_id,
          razorpay_signature: resp.razorpay_signature,
          user_id: '<%= user._id %>',
          product_id: '<%= product_id %>'
        }
        }).done(window.location.href=`/`)
    }); // will pass payment ID, order ID, and Razorpay signature to success handler.
    
      razorpay.on('payment.error', function(resp){
        // swal("Error", "Your payment cannot be happend contact to admin", "error");
      }); // will pass error object to error handler
    
    
    };
    </script> -->

    <script>
    var options = {
        "key": "rzp_test_BUP7HBUiCiHb4b", // Enter the Key ID generated from the Dashboard
        "amount": "50000", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
        "currency": "INR",
        "name": "Acme Corp",
        "description": "Test Transaction",
        "image": "https://example.com/your_logo",
        "order_id": '<%= order_id %>', //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
        "callback_url": "/",
        "callback_method": "get",
        "handler": async (response) => {
            //console.log(response);
            await $.ajax({
              type: 'POST',
              url: '/products/<%= product_id %>/orders/pay-verify',
              data: {
                razorpay_payment_id: response.razorpay_payment_id,
                razorpay_order_id: response.razorpay_order_id,
                razorpay_signature: response.razorpay_signature,
                user_id: '<%= user._id %>',
                product_id: '<%= product_id %>'
              }
            }).done(window.location.href='/')
        },
        "prefill": {
            "name": "Gaurav Kumar",
            "email": "gaurav.kumar@example.com",
            "contact": "9000090000"
        },
        "notes": {
            "address": "Razorpay Corporate Office"
        },
        "theme": {
            "color": "#3399cc"
        }
    };
    var rzp1 = new Razorpay(options);
    rzp1.on('payment.failed', function (response){
            alert(response.error.code);
            alert(response.error.description);
            alert(response.error.source);
            alert(response.error.step);
            alert(response.error.reason);
            alert(response.error.metadata.order_id);
            alert(response.error.metadata.payment_id);
    });
    document.getElementById('rzp-button1').onclick = function(e){
        rzp1.open();
        e.preventDefault();
    }
    </script>